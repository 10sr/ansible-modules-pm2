name: Publish

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.event_name == 'release'
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Assert version
        run: |
          set -eux
          test refs/tags/v`python ./setup.py --version` == "${{ github.ref }}"
      - name: Cache packages
        uses: actions/cache@v1
        with:
          path: ~/.cache
          key: ${{ runner.os }}-python3.8-${{ hashFiles('**/Pipfile.lock') }}-pipcache
      - name: Cache environment
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-python3.8-${{ hashFiles('**/Pipfile.lock') }}-venv
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install Pipenv
        run: python -m pip install pipenv
      - name: Install denendencies
        run: |
          set -eux
          if ! pipenv run twine --version
          then
              make publish-installdeps
          fi
          pipenv run twine --version
      - name: Publish to pypi
        run: make publish publish_repository=pypi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

